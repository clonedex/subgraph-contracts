{
  "id": "c5227a61a7e29d9ea6b15909f6d912b0",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.4.24",
  "solcLongVersion": "0.4.24+commit.e67f0147",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/ConverterRegistry.sol": {
        "content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.4.24;\n\n/*\n    Owned contract interface\n*/\ncontract IOwned {\n    // this function isn't abstract since the compiler emits automatically generated getter functions as external\n    function owner() public view returns (address) {}\n\n    function transferOwnership(address _newOwner) public;\n    function acceptOwnership() public;\n}\n\n\n\n/*\n    Provides support and utilities for contract ownership\n*/\ncontract Owned is IOwned {\n    address public owner;\n    address public newOwner;\n\n    event OwnerUpdate(address indexed _prevOwner, address indexed _newOwner);\n\n    /**\n        @dev constructor\n    */\n    constructor() public {\n        owner = msg.sender;\n    }\n\n    // allows execution by the owner only\n    modifier ownerOnly {\n        require(msg.sender == owner);\n        _;\n    }\n\n    /**\n        @dev allows transferring the contract ownership\n        the new owner still needs to accept the transfer\n        can only be called by the contract owner\n\n        @param _newOwner    new contract owner\n    */\n    function transferOwnership(address _newOwner) public ownerOnly {\n        require(_newOwner != owner);\n        newOwner = _newOwner;\n    }\n\n    /**\n        @dev used by a new owner to accept an ownership transfer\n    */\n    function acceptOwnership() public {\n        require(msg.sender == newOwner);\n        emit OwnerUpdate(owner, newOwner);\n        owner = newOwner;\n        newOwner = address(0);\n    }\n}\n\n/*\n    Utilities & Common Modifiers\n*/\ncontract Utils {\n    /**\n        constructor\n    */\n    constructor() public {\n    }\n\n    // verifies that an amount is greater than zero\n    modifier greaterThanZero(uint256 _amount) {\n        require(_amount > 0);\n        _;\n    }\n\n    // validates an address - currently only checks that it isn't null\n    modifier validAddress(address _address) {\n        require(_address != address(0));\n        _;\n    }\n\n    // verifies that the address is different than this contract address\n    modifier notThis(address _address) {\n        require(_address != address(this));\n        _;\n    }\n\n}\n\n\n\n\n/**\n    Bancor Converter Registry\n\n    The bancor converter registry keeps converter addresses by token addresses and vice versa.\n    The owner can update converter addresses so that a the token address always points to\n    the updated list of converters for each token.\n\n    The contract also allows to iterate through all the tokens in the network.\n\n    Note that converter addresses for each token are returned in ascending order (from oldest\n    to latest).\n*/\ncontract BancorConverterRegistry is Owned, Utils {\n    mapping (address => bool) private tokensRegistered;         // token address -> registered or not\n    mapping (address => address[]) private tokensToConverters;  // token address -> converter addresses\n    mapping (address => address) private convertersToTokens;    // converter address -> token address\n    address[] public tokens;                                    // list of all token addresses\n\n    // triggered when a converter is added to the registry\n    event ConverterAddition(address indexed _token, address _address);\n\n    // triggered when a converter is removed from the registry\n    event ConverterRemoval(address indexed _token, address _address);\n\n    /**\n        @dev constructor\n    */\n    constructor() public {\n    }\n\n    /**\n        @dev returns the number of tokens in the registry\n\n        @return number of tokens\n    */\n    function tokenCount() public view returns (uint256) {\n        return tokens.length;\n    }\n\n    /**\n        @dev returns the number of converters associated with the given token\n        or 0 if the token isn't registered\n\n        @param _token   token address\n\n        @return number of converters\n    */\n    function converterCount(address _token) public view returns (uint256) {\n        return tokensToConverters[_token].length;\n    }\n\n    /**\n        @dev returns the converter address associated with the given token\n        or zero address if no such converter exists\n\n        @param _token   token address\n        @param _index   converter index\n\n        @return converter address\n    */\n    function converterAddress(address _token, uint32 _index) public view returns (address) {\n        if (_index >= tokensToConverters[_token].length)\n            return address(0);\n\n        return tokensToConverters[_token][_index];\n    }\n\n    /**\n        @dev returns the token address associated with the given converter\n        or zero address if no such converter exists\n\n        @param _converter   converter address\n\n        @return token address\n    */\n    function tokenAddress(address _converter) public view returns (address) {\n        return convertersToTokens[_converter];\n    }\n\n    /**\n        @dev adds a new converter address for a given token to the registry\n        throws if the converter is already registered\n\n        @param _token       token address\n        @param _converter   converter address\n    */\n    function registerConverter(address _token, address _converter)\n        public\n        ownerOnly\n        validAddress(_token)\n        validAddress(_converter)\n    {\n        require(convertersToTokens[_converter] == address(0));\n\n        // add the token to the list of tokens\n        if (!tokensRegistered[_token]) {\n            tokens.push(_token);\n            tokensRegistered[_token] = true;\n        }\n\n        tokensToConverters[_token].push(_converter);\n        convertersToTokens[_converter] = _token;\n\n        // dispatch the converter addition event\n        emit ConverterAddition(_token, _converter);\n    }\n\n    /**\n        @dev removes an existing converter from the registry\n        note that the function doesn't scale and might be needed to be called\n        multiple times when removing an older converter from a large converter list\n\n        @param _token   token address\n        @param _index   converter index\n    */\n    function unregisterConverter(address _token, uint32 _index)\n        public\n        ownerOnly\n        validAddress(_token)\n    {\n        require(_index < tokensToConverters[_token].length);\n\n        address converter = tokensToConverters[_token][_index];\n\n        // move all newer converters 1 position lower\n        for (uint32 i = _index + 1; i < tokensToConverters[_token].length; i++) {\n            tokensToConverters[_token][i - 1] = tokensToConverters[_token][i];\n        }\n\n        // decrease the number of converters defined for the token by 1\n        tokensToConverters[_token].length--;\n        \n        // removes the converter from the converters -> tokens list\n        delete convertersToTokens[converter];\n\n        // dispatch the converter removal event\n        emit ConverterRemoval(_token, converter);\n    }\n}"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "runs": 800
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata",
            "devdoc",
            "userdoc",
            "storageLayout",
            "evm.gasEstimates"
          ],
          "": [
            "ast"
          ]
        }
      },
      "metadata": {
        "useLiteralContent": true
      }
    }
  },
  "output": {
    "contracts": {
      "contracts/ConverterRegistry.sol": {
        "BancorConverterRegistry": {
          "abi": [
            {
              "constant": false,
              "inputs": [
                {
                  "name": "_token",
                  "type": "address"
                },
                {
                  "name": "_index",
                  "type": "uint32"
                }
              ],
              "name": "unregisterConverter",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [
                {
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "tokens",
              "outputs": [
                {
                  "name": "",
                  "type": "address"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [],
              "name": "acceptOwnership",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "name": "",
                  "type": "address"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [
                {
                  "name": "_token",
                  "type": "address"
                },
                {
                  "name": "_index",
                  "type": "uint32"
                }
              ],
              "name": "converterAddress",
              "outputs": [
                {
                  "name": "",
                  "type": "address"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [
                {
                  "name": "_converter",
                  "type": "address"
                }
              ],
              "name": "tokenAddress",
              "outputs": [
                {
                  "name": "",
                  "type": "address"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "tokenCount",
              "outputs": [
                {
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [
                {
                  "name": "_token",
                  "type": "address"
                }
              ],
              "name": "converterCount",
              "outputs": [
                {
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "name": "_token",
                  "type": "address"
                },
                {
                  "name": "_converter",
                  "type": "address"
                }
              ],
              "name": "registerConverter",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "newOwner",
              "outputs": [
                {
                  "name": "",
                  "type": "address"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "name": "_newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "name": "_token",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "name": "_address",
                  "type": "address"
                }
              ],
              "name": "ConverterAddition",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "name": "_token",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "name": "_address",
                  "type": "address"
                }
              ],
              "name": "ConverterRemoval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "name": "_prevOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "name": "_newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnerUpdate",
              "type": "event"
            }
          ],
          "devdoc": {
            "methods": {
              "acceptOwnership()": {
                "details": "used by a new owner to accept an ownership transfer"
              },
              "converterAddress(address,uint32)": {
                "details": "returns the converter address associated with the given token or zero address if no such converter exists",
                "params": {
                  "_index": "converter index",
                  "_token": "token address"
                },
                "return": "converter address"
              },
              "converterCount(address)": {
                "details": "returns the number of converters associated with the given token or 0 if the token isn't registered",
                "params": {
                  "_token": "token address"
                },
                "return": "number of converters"
              },
              "registerConverter(address,address)": {
                "details": "adds a new converter address for a given token to the registry throws if the converter is already registered",
                "params": {
                  "_converter": "converter address",
                  "_token": "token address"
                }
              },
              "tokenAddress(address)": {
                "details": "returns the token address associated with the given converter or zero address if no such converter exists",
                "params": {
                  "_converter": "converter address"
                },
                "return": "token address"
              },
              "tokenCount()": {
                "details": "returns the number of tokens in the registry",
                "return": "number of tokens"
              },
              "transferOwnership(address)": {
                "details": "allows transferring the contract ownership the new owner still needs to accept the transfer can only be called by the contract owner",
                "params": {
                  "_newOwner": "new contract owner"
                }
              },
              "unregisterConverter(address,uint32)": {
                "details": "removes an existing converter from the registry note that the function doesn't scale and might be needed to be called multiple times when removing an older converter from a large converter list",
                "params": {
                  "_index": "converter index",
                  "_token": "token address"
                }
              }
            }
          },
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b5060008054600160a060020a0319163317905561082d806100326000396000f3006080604052600436106100ae5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166338cb066f81146100b35780634f64b2be146100df57806379ba5097146101135780638da5cb5b1461012857806390ab31061461013d5780639884e801146101675780639f181b5e14610188578063cd9d4d66146101af578063d26a8d2e146101d0578063d4ee1d90146101f7578063f2fde38b1461020c575b600080fd5b3480156100bf57600080fd5b506100dd600160a060020a036004351663ffffffff6024351661022d565b005b3480156100eb57600080fd5b506100f7600435610440565b60408051600160a060020a039092168252519081900360200190f35b34801561011f57600080fd5b506100dd610468565b34801561013457600080fd5b506100f76104f0565b34801561014957600080fd5b506100f7600160a060020a036004351663ffffffff602435166104ff565b34801561017357600080fd5b506100f7600160a060020a0360043516610574565b34801561019457600080fd5b5061019d610592565b60408051918252519081900360200190f35b3480156101bb57600080fd5b5061019d600160a060020a0360043516610599565b3480156101dc57600080fd5b506100dd600160a060020a03600435811690602435166105b4565b34801561020357600080fd5b506100f761074a565b34801561021857600080fd5b506100dd600160a060020a0360043516610759565b600080548190600160a060020a0316331461024757600080fd5b83600160a060020a038116151561025d57600080fd5b600160a060020a03851660009081526003602052604090205463ffffffff85161061028757600080fd5b600160a060020a0385166000908152600360205260409020805463ffffffff86169081106102b157fe5b600091825260209091200154600160a060020a031692506001840191505b600160a060020a03851660009081526003602052604090205463ffffffff831610156103a257600160a060020a0385166000908152600360205260409020805463ffffffff841690811061031f57fe5b6000918252602080832090910154600160a060020a03888116845260039092526040909220805491909216919063ffffffff60001986011690811061036057fe5b6000918252602090912001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055600191909101906102cf565b600160a060020a03851660009081526003602052604090208054906103cb9060001983016107ba565b50600160a060020a03808416600081815260046020908152604091829020805473ffffffffffffffffffffffffffffffffffffffff1916905581519283529051928816927fc3b25a6c3b7509edde0f2e6cc317b5820a901fa82ac554709206e1d7237fe2949281900390910190a25050505050565b600580548290811061044e57fe5b600091825260209091200154600160a060020a0316905081565b600154600160a060020a0316331461047f57600080fd5b60015460008054604051600160a060020a0393841693909116917f343765429aea5a34b3ff6a3785a98a5abb2597aca87bfbb58632c173d585373a91a3600180546000805473ffffffffffffffffffffffffffffffffffffffff19908116600160a060020a03841617909155169055565b600054600160a060020a031681565b600160a060020a03821660009081526003602052604081205463ffffffff83161061052c5750600061056e565b600160a060020a0383166000908152600360205260409020805463ffffffff841690811061055657fe5b600091825260209091200154600160a060020a031690505b92915050565b600160a060020a039081166000908152600460205260409020541690565b6005545b90565b600160a060020a031660009081526003602052604090205490565b600054600160a060020a031633146105cb57600080fd5b81600160a060020a03811615156105e157600080fd5b81600160a060020a03811615156105f757600080fd5b600160a060020a03838116600090815260046020526040902054161561061c57600080fd5b600160a060020a03841660009081526002602052604090205460ff1615156106af576005805460018082019092557f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0387169081179091556000908152600260205260409020805460ff191690911790555b600160a060020a038085166000818152600360209081526040808320805460018101825590845282842001805495891673ffffffffffffffffffffffffffffffffffffffff1996871681179091558084526004835292819020805490951684179094558351918252925191927f229aec2ec4b21e700d6daf13a894e7b38c18b844b021f2eee263f04af3ea6f0092918290030190a250505050565b600154600160a060020a031681565b600054600160a060020a0316331461077057600080fd5b600054600160a060020a038281169116141561078b57600080fd5b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b8154818355818111156107de576000838152602090206107de9181019083016107e3565b505050565b61059691905b808211156107fd57600081556001016107e9565b50905600a165627a7a72305820b631fd9f6635af5d0c374780ed9e7854b0e6068fe38254599506662240d9e5840029",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND CALLER OR SWAP1 SSTORE PUSH2 0x82D DUP1 PUSH2 0x32 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xAE JUMPI PUSH4 0xFFFFFFFF PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 CALLDATALOAD DIV AND PUSH4 0x38CB066F DUP2 EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0x4F64B2BE EQ PUSH2 0xDF JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x113 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x128 JUMPI DUP1 PUSH4 0x90AB3106 EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0x9884E801 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0x9F181B5E EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0xCD9D4D66 EQ PUSH2 0x1AF JUMPI DUP1 PUSH4 0xD26A8D2E EQ PUSH2 0x1D0 JUMPI DUP1 PUSH4 0xD4EE1D90 EQ PUSH2 0x1F7 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x20C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH4 0xFFFFFFFF PUSH1 0x24 CALLDATALOAD AND PUSH2 0x22D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF7 PUSH1 0x4 CALLDATALOAD PUSH2 0x440 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDD PUSH2 0x468 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x134 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF7 PUSH2 0x4F0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x149 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF7 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH4 0xFFFFFFFF PUSH1 0x24 CALLDATALOAD AND PUSH2 0x4FF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x173 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF7 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x574 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x194 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19D PUSH2 0x592 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19D PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x599 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD DUP2 AND SWAP1 PUSH1 0x24 CALLDATALOAD AND PUSH2 0x5B4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x203 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF7 PUSH2 0x74A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x218 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x759 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD DUP2 SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x247 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND ISZERO ISZERO PUSH2 0x25D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0xFFFFFFFF DUP6 AND LT PUSH2 0x287 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH4 0xFFFFFFFF DUP7 AND SWAP1 DUP2 LT PUSH2 0x2B1 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP3 POP PUSH1 0x1 DUP5 ADD SWAP2 POP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0xFFFFFFFF DUP4 AND LT ISZERO PUSH2 0x3A2 JUMPI PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH4 0xFFFFFFFF DUP5 AND SWAP1 DUP2 LT PUSH2 0x31F JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP9 DUP2 AND DUP5 MSTORE PUSH1 0x3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 DUP1 SLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH1 0x0 NOT DUP7 ADD AND SWAP1 DUP2 LT PUSH2 0x360 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x2CF JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP1 PUSH2 0x3CB SWAP1 PUSH1 0x0 NOT DUP4 ADD PUSH2 0x7BA JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 SSTORE DUP2 MLOAD SWAP3 DUP4 MSTORE SWAP1 MLOAD SWAP3 DUP9 AND SWAP3 PUSH32 0xC3B25A6C3B7509EDDE0F2E6CC317B5820A901FA82AC554709206E1D7237FE294 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD DUP3 SWAP1 DUP2 LT PUSH2 0x44E JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x47F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP4 DUP5 AND SWAP4 SWAP1 SWAP2 AND SWAP2 PUSH32 0x343765429AEA5A34B3FF6A3785A98A5ABB2597ACA87BFBB58632C173D585373A SWAP2 LOG3 PUSH1 0x1 DUP1 SLOAD PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 AND OR SWAP1 SWAP2 SSTORE AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH4 0xFFFFFFFF DUP4 AND LT PUSH2 0x52C JUMPI POP PUSH1 0x0 PUSH2 0x56E JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH4 0xFFFFFFFF DUP5 AND SWAP1 DUP2 LT PUSH2 0x556 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x5CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND ISZERO ISZERO PUSH2 0x5E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND ISZERO ISZERO PUSH2 0x5F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND ISZERO PUSH2 0x61C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x6AF JUMPI PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD SWAP1 SWAP3 SSTORE PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 ADD DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP8 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP1 DUP5 MSTORE DUP3 DUP5 KECCAK256 ADD DUP1 SLOAD SWAP6 DUP10 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT SWAP7 DUP8 AND DUP2 OR SWAP1 SWAP2 SSTORE DUP1 DUP5 MSTORE PUSH1 0x4 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD SWAP1 SWAP6 AND DUP5 OR SWAP1 SWAP5 SSTORE DUP4 MLOAD SWAP2 DUP3 MSTORE SWAP3 MLOAD SWAP2 SWAP3 PUSH32 0x229AEC2EC4B21E700D6DAF13A894E7B38C18B844B021F2EEE263F04AF3EA6F00 SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x770 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 DUP2 AND SWAP2 AND EQ ISZERO PUSH2 0x78B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST DUP2 SLOAD DUP2 DUP4 SSTORE DUP2 DUP2 GT ISZERO PUSH2 0x7DE JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH2 0x7DE SWAP2 DUP2 ADD SWAP1 DUP4 ADD PUSH2 0x7E3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x596 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x7FD JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x7E9 JUMP JUMPDEST POP SWAP1 JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xb6 BALANCE REVERT SWAP16 PUSH7 0x35AF5D0C374780 0xed SWAP15 PUSH25 0x54B0E6068FE38254599506662240D9E5840029000000000000 ",
              "sourceMap": "2574:4192:0:-;;;3338:28;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;690:5:0;:18;;-1:-1:-1;;;;;;690:18:0;698:10;690:18;;;2574:4192;;;;;;"
            },
            "deployedBytecode": {
              "linkReferences": {},
              "object": "6080604052600436106100ae5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166338cb066f81146100b35780634f64b2be146100df57806379ba5097146101135780638da5cb5b1461012857806390ab31061461013d5780639884e801146101675780639f181b5e14610188578063cd9d4d66146101af578063d26a8d2e146101d0578063d4ee1d90146101f7578063f2fde38b1461020c575b600080fd5b3480156100bf57600080fd5b506100dd600160a060020a036004351663ffffffff6024351661022d565b005b3480156100eb57600080fd5b506100f7600435610440565b60408051600160a060020a039092168252519081900360200190f35b34801561011f57600080fd5b506100dd610468565b34801561013457600080fd5b506100f76104f0565b34801561014957600080fd5b506100f7600160a060020a036004351663ffffffff602435166104ff565b34801561017357600080fd5b506100f7600160a060020a0360043516610574565b34801561019457600080fd5b5061019d610592565b60408051918252519081900360200190f35b3480156101bb57600080fd5b5061019d600160a060020a0360043516610599565b3480156101dc57600080fd5b506100dd600160a060020a03600435811690602435166105b4565b34801561020357600080fd5b506100f761074a565b34801561021857600080fd5b506100dd600160a060020a0360043516610759565b600080548190600160a060020a0316331461024757600080fd5b83600160a060020a038116151561025d57600080fd5b600160a060020a03851660009081526003602052604090205463ffffffff85161061028757600080fd5b600160a060020a0385166000908152600360205260409020805463ffffffff86169081106102b157fe5b600091825260209091200154600160a060020a031692506001840191505b600160a060020a03851660009081526003602052604090205463ffffffff831610156103a257600160a060020a0385166000908152600360205260409020805463ffffffff841690811061031f57fe5b6000918252602080832090910154600160a060020a03888116845260039092526040909220805491909216919063ffffffff60001986011690811061036057fe5b6000918252602090912001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055600191909101906102cf565b600160a060020a03851660009081526003602052604090208054906103cb9060001983016107ba565b50600160a060020a03808416600081815260046020908152604091829020805473ffffffffffffffffffffffffffffffffffffffff1916905581519283529051928816927fc3b25a6c3b7509edde0f2e6cc317b5820a901fa82ac554709206e1d7237fe2949281900390910190a25050505050565b600580548290811061044e57fe5b600091825260209091200154600160a060020a0316905081565b600154600160a060020a0316331461047f57600080fd5b60015460008054604051600160a060020a0393841693909116917f343765429aea5a34b3ff6a3785a98a5abb2597aca87bfbb58632c173d585373a91a3600180546000805473ffffffffffffffffffffffffffffffffffffffff19908116600160a060020a03841617909155169055565b600054600160a060020a031681565b600160a060020a03821660009081526003602052604081205463ffffffff83161061052c5750600061056e565b600160a060020a0383166000908152600360205260409020805463ffffffff841690811061055657fe5b600091825260209091200154600160a060020a031690505b92915050565b600160a060020a039081166000908152600460205260409020541690565b6005545b90565b600160a060020a031660009081526003602052604090205490565b600054600160a060020a031633146105cb57600080fd5b81600160a060020a03811615156105e157600080fd5b81600160a060020a03811615156105f757600080fd5b600160a060020a03838116600090815260046020526040902054161561061c57600080fd5b600160a060020a03841660009081526002602052604090205460ff1615156106af576005805460018082019092557f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0387169081179091556000908152600260205260409020805460ff191690911790555b600160a060020a038085166000818152600360209081526040808320805460018101825590845282842001805495891673ffffffffffffffffffffffffffffffffffffffff1996871681179091558084526004835292819020805490951684179094558351918252925191927f229aec2ec4b21e700d6daf13a894e7b38c18b844b021f2eee263f04af3ea6f0092918290030190a250505050565b600154600160a060020a031681565b600054600160a060020a0316331461077057600080fd5b600054600160a060020a038281169116141561078b57600080fd5b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b8154818355818111156107de576000838152602090206107de9181019083016107e3565b505050565b61059691905b808211156107fd57600081556001016107e9565b50905600a165627a7a72305820b631fd9f6635af5d0c374780ed9e7854b0e6068fe38254599506662240d9e5840029",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xAE JUMPI PUSH4 0xFFFFFFFF PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 CALLDATALOAD DIV AND PUSH4 0x38CB066F DUP2 EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0x4F64B2BE EQ PUSH2 0xDF JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x113 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x128 JUMPI DUP1 PUSH4 0x90AB3106 EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0x9884E801 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0x9F181B5E EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0xCD9D4D66 EQ PUSH2 0x1AF JUMPI DUP1 PUSH4 0xD26A8D2E EQ PUSH2 0x1D0 JUMPI DUP1 PUSH4 0xD4EE1D90 EQ PUSH2 0x1F7 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x20C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH4 0xFFFFFFFF PUSH1 0x24 CALLDATALOAD AND PUSH2 0x22D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF7 PUSH1 0x4 CALLDATALOAD PUSH2 0x440 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDD PUSH2 0x468 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x134 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF7 PUSH2 0x4F0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x149 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF7 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH4 0xFFFFFFFF PUSH1 0x24 CALLDATALOAD AND PUSH2 0x4FF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x173 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF7 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x574 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x194 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19D PUSH2 0x592 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19D PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x599 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD DUP2 AND SWAP1 PUSH1 0x24 CALLDATALOAD AND PUSH2 0x5B4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x203 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF7 PUSH2 0x74A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x218 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x759 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD DUP2 SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x247 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND ISZERO ISZERO PUSH2 0x25D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0xFFFFFFFF DUP6 AND LT PUSH2 0x287 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH4 0xFFFFFFFF DUP7 AND SWAP1 DUP2 LT PUSH2 0x2B1 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP3 POP PUSH1 0x1 DUP5 ADD SWAP2 POP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0xFFFFFFFF DUP4 AND LT ISZERO PUSH2 0x3A2 JUMPI PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH4 0xFFFFFFFF DUP5 AND SWAP1 DUP2 LT PUSH2 0x31F JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP9 DUP2 AND DUP5 MSTORE PUSH1 0x3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 DUP1 SLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH1 0x0 NOT DUP7 ADD AND SWAP1 DUP2 LT PUSH2 0x360 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x2CF JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP1 PUSH2 0x3CB SWAP1 PUSH1 0x0 NOT DUP4 ADD PUSH2 0x7BA JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 SSTORE DUP2 MLOAD SWAP3 DUP4 MSTORE SWAP1 MLOAD SWAP3 DUP9 AND SWAP3 PUSH32 0xC3B25A6C3B7509EDDE0F2E6CC317B5820A901FA82AC554709206E1D7237FE294 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD DUP3 SWAP1 DUP2 LT PUSH2 0x44E JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x47F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP4 DUP5 AND SWAP4 SWAP1 SWAP2 AND SWAP2 PUSH32 0x343765429AEA5A34B3FF6A3785A98A5ABB2597ACA87BFBB58632C173D585373A SWAP2 LOG3 PUSH1 0x1 DUP1 SLOAD PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 AND OR SWAP1 SWAP2 SSTORE AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH4 0xFFFFFFFF DUP4 AND LT PUSH2 0x52C JUMPI POP PUSH1 0x0 PUSH2 0x56E JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH4 0xFFFFFFFF DUP5 AND SWAP1 DUP2 LT PUSH2 0x556 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x5CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND ISZERO ISZERO PUSH2 0x5E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND ISZERO ISZERO PUSH2 0x5F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND ISZERO PUSH2 0x61C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x6AF JUMPI PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD SWAP1 SWAP3 SSTORE PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 ADD DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP8 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP1 DUP5 MSTORE DUP3 DUP5 KECCAK256 ADD DUP1 SLOAD SWAP6 DUP10 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT SWAP7 DUP8 AND DUP2 OR SWAP1 SWAP2 SSTORE DUP1 DUP5 MSTORE PUSH1 0x4 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD SWAP1 SWAP6 AND DUP5 OR SWAP1 SWAP5 SSTORE DUP4 MLOAD SWAP2 DUP3 MSTORE SWAP3 MLOAD SWAP2 SWAP3 PUSH32 0x229AEC2EC4B21E700D6DAF13A894E7B38C18B844B021F2EEE263F04AF3EA6F00 SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x770 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 DUP2 AND SWAP2 AND EQ ISZERO PUSH2 0x78B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST DUP2 SLOAD DUP2 DUP4 SSTORE DUP2 DUP2 GT ISZERO PUSH2 0x7DE JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH2 0x7DE SWAP2 DUP2 ADD SWAP1 DUP4 ADD PUSH2 0x7E3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x596 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x7FD JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x7E9 JUMP JUMPDEST POP SWAP1 JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xb6 BALANCE REVERT SWAP16 PUSH7 0x35AF5D0C374780 0xed SWAP15 PUSH25 0x54B0E6068FE38254599506662240D9E5840029000000000000 ",
              "sourceMap": "2574:4192:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5939:825;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;5939:825:0;-1:-1:-1;;;;;5939:825:0;;;;;;;;;;;2937:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2937:23:0;;;;;;;;;-1:-1:-1;;;;;2937:23:0;;;;;;;;;;;;;;1292:182;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1292:182:0;;;;484:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;484:20:0;;;;4176:234;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;4176:234:0;-1:-1:-1;;;;;4176:234:0;;;;;;;;;4636:126;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;4636:126:0;-1:-1:-1;;;;;4636:126:0;;;;;3479:89;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3479:89:0;;;;;;;;;;;;;;;;;;;;3787:127;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3787:127:0;-1:-1:-1;;;;;3787:127:0;;;;;5002:614;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;5002:614:0;-1:-1:-1;;;;;5002:614:0;;;;;;;;;;510:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;510:23:0;;;;1069:137;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1069:137:0;-1:-1:-1;;;;;1069:137:0;;;;;5939:825;6137:17;814:5;;6137:17;;-1:-1:-1;;;;;814:5:0;800:10;:19;792:28;;;;;;6053:6;-1:-1:-1;;;;;1884:22:0;;;;1876:31;;;;;;-1:-1:-1;;;;;6092:26:0;;;;;;:18;:26;;;;;:33;6083:42;;;;6075:51;;;;;;-1:-1:-1;;;;;6157:26:0;;;;;;:18;:26;;;;;:34;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6157:34:0;;-1:-1:-1;6157:34:0;6272:10;;;-1:-1:-1;6256:162:0;-1:-1:-1;;;;;6288:26:0;;;;;;:18;:26;;;;;:33;6284:37;;;;6256:162;;;-1:-1:-1;;;;;6378:26:0;;;;;;:18;:26;;;;;:29;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6342:26:0;;;;;:18;:26;;;;;;;:33;;6378:29;;;;;6342:26;:33;-1:-1:-1;;6369:5:0;;6342:33;;;;;;;;;;;;;;;;;:65;;-1:-1:-1;;6342:65:0;-1:-1:-1;;;;;6342:65:0;;;;;;;;;;-1:-1:-1;6323:3:0;;;;;6256:162;;;-1:-1:-1;;;;;6500:26:0;;;;;;:18;:26;;;;;:35;;;;;-1:-1:-1;;6500:35:0;;;:::i;:::-;-1:-1:-1;;;;;;6629:29:0;;;;;;;:18;:29;;;;;;;;;6622:36;;-1:-1:-1;;6622:36:0;;;6722:35;;;;;;;;;;;;;;;;;;;;;830:1;5939:825;;;;:::o;2937:23::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2937:23:0;;-1:-1:-1;2937:23:0;:::o;1292:182::-;1358:8;;-1:-1:-1;;;;;1358:8:0;1344:10;:22;1336:31;;;;;;1401:8;;;1394:5;;1382:28;;-1:-1:-1;;;;;1401:8:0;;;;1394:5;;;;1382:28;;;1428:8;;;;1420:16;;-1:-1:-1;;1420:16:0;;;-1:-1:-1;;;;;1428:8:0;;1420:16;;;;1446:21;;;1292:182::o;484:20::-;;;-1:-1:-1;;;;;484:20:0;;:::o;4176:234::-;-1:-1:-1;;;;;4287:26:0;;4254:7;4287:26;;;:18;:26;;;;;:33;4277:43;;;;4273:78;;-1:-1:-1;4349:1:0;4334:17;;4273:78;-1:-1:-1;;;;;4369:26:0;;;;;;:18;:26;;;;;:34;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4369:34:0;;-1:-1:-1;4176:234:0;;;;;:::o;4636:126::-;-1:-1:-1;;;;;4725:30:0;;;4699:7;4725:30;;;:18;:30;;;;;;;;4636:126::o;3479:89::-;3548:6;:13;3479:89;;:::o;3787:127::-;-1:-1:-1;;;;;3874:26:0;3848:7;3874:26;;;:18;:26;;;;;:33;;3787:127::o;5002:614::-;814:5;;-1:-1:-1;;;;;814:5:0;800:10;:19;792:28;;;;;;5119:6;-1:-1:-1;;;;;1884:22:0;;;;1876:31;;;;;;5148:10;-1:-1:-1;;;;;1884:22:0;;;;1876:31;;;;;;-1:-1:-1;;;;;5182:30:0;;;5224:1;5182:30;;;:18;:30;;;;;;;:44;5174:53;;;;;;-1:-1:-1;;;;;5290:24:0;;;;;;:16;:24;;;;;;;;5289:25;5285:120;;;5330:6;27:10:-1;;39:1;23:18;;;45:23;;;5330:19:0;;;;-1:-1:-1;;5330:19:0;-1:-1:-1;;;;;5330:19:0;;;;;;;;-1:-1:-1;5363:24:0;;;:16;5330:19;5363:24;;;;:31;;-1:-1:-1;;5363:31:0;;;;;;5285:120;-1:-1:-1;;;;;5415:26:0;;;;;;;:18;:26;;;;;;;;27:10:-1;;39:1;23:18;;45:23;;5415:43:0;;;;;;;;;;;;-1:-1:-1;;5415:43:0;;;;;;;;5468:30;;;:18;:30;;;;;;:39;;;;;;;;;;5572:37;;;;;;;5415:26;;5572:37;;;;;;;;;1917:1;830;5002:614;;:::o;510:23::-;;;-1:-1:-1;;;;;510:23:0;;:::o;1069:137::-;814:5;;-1:-1:-1;;;;;814:5:0;800:10;:19;792:28;;;;;;1163:5;;-1:-1:-1;;;;;1150:18:0;;;1163:5;;1150:18;;1142:27;;;;;;1179:8;:20;;-1:-1:-1;;1179:20:0;-1:-1:-1;;;;;1179:20:0;;;;;;;;;;1069:137::o;2574:4192::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "418600",
                "executionCost": "20747",
                "totalCost": "439347"
              },
              "external": {
                "acceptOwnership()": "43008",
                "converterAddress(address,uint32)": "1543",
                "converterCount(address)": "760",
                "newOwner()": "735",
                "owner()": "603",
                "registerConverter(address,address)": "124878",
                "tokenAddress(address)": "803",
                "tokenCount()": "517",
                "tokens(uint256)": "859",
                "transferOwnership(address)": "21352",
                "unregisterConverter(address,uint32)": "infinite"
              }
            },
            "methodIdentifiers": {
              "acceptOwnership()": "79ba5097",
              "converterAddress(address,uint32)": "90ab3106",
              "converterCount(address)": "cd9d4d66",
              "newOwner()": "d4ee1d90",
              "owner()": "8da5cb5b",
              "registerConverter(address,address)": "d26a8d2e",
              "tokenAddress(address)": "9884e801",
              "tokenCount()": "9f181b5e",
              "tokens(uint256)": "4f64b2be",
              "transferOwnership(address)": "f2fde38b",
              "unregisterConverter(address,uint32)": "38cb066f"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.4.24+commit.e67f0147\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_index\",\"type\":\"uint32\"}],\"name\":\"unregisterConverter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokens\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_index\",\"type\":\"uint32\"}],\"name\":\"converterAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_converter\",\"type\":\"address\"}],\"name\":\"tokenAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"converterCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_converter\",\"type\":\"address\"}],\"name\":\"registerConverter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_token\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"ConverterAddition\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_token\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"ConverterRemoval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_prevOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"OwnerUpdate\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"acceptOwnership()\":{\"details\":\"used by a new owner to accept an ownership transfer\"},\"converterAddress(address,uint32)\":{\"details\":\"returns the converter address associated with the given token or zero address if no such converter exists\",\"params\":{\"_index\":\"converter index\",\"_token\":\"token address\"},\"return\":\"converter address\"},\"converterCount(address)\":{\"details\":\"returns the number of converters associated with the given token or 0 if the token isn't registered\",\"params\":{\"_token\":\"token address\"},\"return\":\"number of converters\"},\"registerConverter(address,address)\":{\"details\":\"adds a new converter address for a given token to the registry throws if the converter is already registered\",\"params\":{\"_converter\":\"converter address\",\"_token\":\"token address\"}},\"tokenAddress(address)\":{\"details\":\"returns the token address associated with the given converter or zero address if no such converter exists\",\"params\":{\"_converter\":\"converter address\"},\"return\":\"token address\"},\"tokenCount()\":{\"details\":\"returns the number of tokens in the registry\",\"return\":\"number of tokens\"},\"transferOwnership(address)\":{\"details\":\"allows transferring the contract ownership the new owner still needs to accept the transfer can only be called by the contract owner\",\"params\":{\"_newOwner\":\"new contract owner\"}},\"unregisterConverter(address,uint32)\":{\"details\":\"removes an existing converter from the registry note that the function doesn't scale and might be needed to be called multiple times when removing an older converter from a large converter list\",\"params\":{\"_index\":\"converter index\",\"_token\":\"token address\"}}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/ConverterRegistry.sol\":\"BancorConverterRegistry\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[]},\"sources\":{\"contracts/ConverterRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.4.24;\\n\\n/*\\n    Owned contract interface\\n*/\\ncontract IOwned {\\n    // this function isn't abstract since the compiler emits automatically generated getter functions as external\\n    function owner() public view returns (address) {}\\n\\n    function transferOwnership(address _newOwner) public;\\n    function acceptOwnership() public;\\n}\\n\\n\\n\\n/*\\n    Provides support and utilities for contract ownership\\n*/\\ncontract Owned is IOwned {\\n    address public owner;\\n    address public newOwner;\\n\\n    event OwnerUpdate(address indexed _prevOwner, address indexed _newOwner);\\n\\n    /**\\n        @dev constructor\\n    */\\n    constructor() public {\\n        owner = msg.sender;\\n    }\\n\\n    // allows execution by the owner only\\n    modifier ownerOnly {\\n        require(msg.sender == owner);\\n        _;\\n    }\\n\\n    /**\\n        @dev allows transferring the contract ownership\\n        the new owner still needs to accept the transfer\\n        can only be called by the contract owner\\n\\n        @param _newOwner    new contract owner\\n    */\\n    function transferOwnership(address _newOwner) public ownerOnly {\\n        require(_newOwner != owner);\\n        newOwner = _newOwner;\\n    }\\n\\n    /**\\n        @dev used by a new owner to accept an ownership transfer\\n    */\\n    function acceptOwnership() public {\\n        require(msg.sender == newOwner);\\n        emit OwnerUpdate(owner, newOwner);\\n        owner = newOwner;\\n        newOwner = address(0);\\n    }\\n}\\n\\n/*\\n    Utilities & Common Modifiers\\n*/\\ncontract Utils {\\n    /**\\n        constructor\\n    */\\n    constructor() public {\\n    }\\n\\n    // verifies that an amount is greater than zero\\n    modifier greaterThanZero(uint256 _amount) {\\n        require(_amount > 0);\\n        _;\\n    }\\n\\n    // validates an address - currently only checks that it isn't null\\n    modifier validAddress(address _address) {\\n        require(_address != address(0));\\n        _;\\n    }\\n\\n    // verifies that the address is different than this contract address\\n    modifier notThis(address _address) {\\n        require(_address != address(this));\\n        _;\\n    }\\n\\n}\\n\\n\\n\\n\\n/**\\n    Bancor Converter Registry\\n\\n    The bancor converter registry keeps converter addresses by token addresses and vice versa.\\n    The owner can update converter addresses so that a the token address always points to\\n    the updated list of converters for each token.\\n\\n    The contract also allows to iterate through all the tokens in the network.\\n\\n    Note that converter addresses for each token are returned in ascending order (from oldest\\n    to latest).\\n*/\\ncontract BancorConverterRegistry is Owned, Utils {\\n    mapping (address => bool) private tokensRegistered;         // token address -> registered or not\\n    mapping (address => address[]) private tokensToConverters;  // token address -> converter addresses\\n    mapping (address => address) private convertersToTokens;    // converter address -> token address\\n    address[] public tokens;                                    // list of all token addresses\\n\\n    // triggered when a converter is added to the registry\\n    event ConverterAddition(address indexed _token, address _address);\\n\\n    // triggered when a converter is removed from the registry\\n    event ConverterRemoval(address indexed _token, address _address);\\n\\n    /**\\n        @dev constructor\\n    */\\n    constructor() public {\\n    }\\n\\n    /**\\n        @dev returns the number of tokens in the registry\\n\\n        @return number of tokens\\n    */\\n    function tokenCount() public view returns (uint256) {\\n        return tokens.length;\\n    }\\n\\n    /**\\n        @dev returns the number of converters associated with the given token\\n        or 0 if the token isn't registered\\n\\n        @param _token   token address\\n\\n        @return number of converters\\n    */\\n    function converterCount(address _token) public view returns (uint256) {\\n        return tokensToConverters[_token].length;\\n    }\\n\\n    /**\\n        @dev returns the converter address associated with the given token\\n        or zero address if no such converter exists\\n\\n        @param _token   token address\\n        @param _index   converter index\\n\\n        @return converter address\\n    */\\n    function converterAddress(address _token, uint32 _index) public view returns (address) {\\n        if (_index >= tokensToConverters[_token].length)\\n            return address(0);\\n\\n        return tokensToConverters[_token][_index];\\n    }\\n\\n    /**\\n        @dev returns the token address associated with the given converter\\n        or zero address if no such converter exists\\n\\n        @param _converter   converter address\\n\\n        @return token address\\n    */\\n    function tokenAddress(address _converter) public view returns (address) {\\n        return convertersToTokens[_converter];\\n    }\\n\\n    /**\\n        @dev adds a new converter address for a given token to the registry\\n        throws if the converter is already registered\\n\\n        @param _token       token address\\n        @param _converter   converter address\\n    */\\n    function registerConverter(address _token, address _converter)\\n        public\\n        ownerOnly\\n        validAddress(_token)\\n        validAddress(_converter)\\n    {\\n        require(convertersToTokens[_converter] == address(0));\\n\\n        // add the token to the list of tokens\\n        if (!tokensRegistered[_token]) {\\n            tokens.push(_token);\\n            tokensRegistered[_token] = true;\\n        }\\n\\n        tokensToConverters[_token].push(_converter);\\n        convertersToTokens[_converter] = _token;\\n\\n        // dispatch the converter addition event\\n        emit ConverterAddition(_token, _converter);\\n    }\\n\\n    /**\\n        @dev removes an existing converter from the registry\\n        note that the function doesn't scale and might be needed to be called\\n        multiple times when removing an older converter from a large converter list\\n\\n        @param _token   token address\\n        @param _index   converter index\\n    */\\n    function unregisterConverter(address _token, uint32 _index)\\n        public\\n        ownerOnly\\n        validAddress(_token)\\n    {\\n        require(_index < tokensToConverters[_token].length);\\n\\n        address converter = tokensToConverters[_token][_index];\\n\\n        // move all newer converters 1 position lower\\n        for (uint32 i = _index + 1; i < tokensToConverters[_token].length; i++) {\\n            tokensToConverters[_token][i - 1] = tokensToConverters[_token][i];\\n        }\\n\\n        // decrease the number of converters defined for the token by 1\\n        tokensToConverters[_token].length--;\\n        \\n        // removes the converter from the converters -> tokens list\\n        delete convertersToTokens[converter];\\n\\n        // dispatch the converter removal event\\n        emit ConverterRemoval(_token, converter);\\n    }\\n}\",\"keccak256\":\"0x1d9382ec16b5e0d4cbdff87c295c13be64344b8fd0c9876f2157df02c386496f\"}},\"version\":1}",
          "userdoc": {
            "methods": {}
          }
        },
        "IOwned": {
          "abi": [
            {
              "constant": false,
              "inputs": [],
              "name": "acceptOwnership",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "name": "",
                  "type": "address"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "name": "_newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "methods": {}
          },
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "methodIdentifiers": {
              "acceptOwnership()": "79ba5097",
              "owner()": "8da5cb5b",
              "transferOwnership(address)": "f2fde38b"
            }
          },
          "metadata": "",
          "userdoc": {
            "methods": {}
          }
        },
        "Owned": {
          "abi": [
            {
              "constant": false,
              "inputs": [],
              "name": "acceptOwnership",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "name": "",
                  "type": "address"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "newOwner",
              "outputs": [
                {
                  "name": "",
                  "type": "address"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "name": "_newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "name": "_prevOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "name": "_newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnerUpdate",
              "type": "event"
            }
          ],
          "devdoc": {
            "methods": {
              "acceptOwnership()": {
                "details": "used by a new owner to accept an ownership transfer"
              },
              "transferOwnership(address)": {
                "details": "allows transferring the contract ownership the new owner still needs to accept the transfer can only be called by the contract owner",
                "params": {
                  "_newOwner": "new contract owner"
                }
              }
            }
          },
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b5060008054600160a060020a03191633179055610299806100326000396000f3006080604052600436106100615763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166379ba509781146100665780638da5cb5b1461007d578063d4ee1d90146100bb578063f2fde38b146100d0575b600080fd5b34801561007257600080fd5b5061007b6100fe565b005b34801561008957600080fd5b506100926101ad565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b3480156100c757600080fd5b506100926101c9565b3480156100dc57600080fd5b5061007b73ffffffffffffffffffffffffffffffffffffffff600435166101e5565b60015473ffffffffffffffffffffffffffffffffffffffff16331461012257600080fd5b6001546000805460405173ffffffffffffffffffffffffffffffffffffffff93841693909116917f343765429aea5a34b3ff6a3785a98a5abb2597aca87bfbb58632c173d585373a91a3600180546000805473ffffffffffffffffffffffffffffffffffffffff1990811673ffffffffffffffffffffffffffffffffffffffff841617909155169055565b60005473ffffffffffffffffffffffffffffffffffffffff1681565b60015473ffffffffffffffffffffffffffffffffffffffff1681565b60005473ffffffffffffffffffffffffffffffffffffffff16331461020957600080fd5b60005473ffffffffffffffffffffffffffffffffffffffff8281169116141561023157600080fd5b6001805473ffffffffffffffffffffffffffffffffffffffff191673ffffffffffffffffffffffffffffffffffffffff929092169190911790555600a165627a7a72305820f517a3e37eec9b28ecd44ce325a54cc2278acf82ca0eb693ec3b930cfa0f3a580029",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND CALLER OR SWAP1 SSTORE PUSH2 0x299 DUP1 PUSH2 0x32 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x61 JUMPI PUSH4 0xFFFFFFFF PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 CALLDATALOAD DIV AND PUSH4 0x79BA5097 DUP2 EQ PUSH2 0x66 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x7D JUMPI DUP1 PUSH4 0xD4EE1D90 EQ PUSH2 0xBB JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xD0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7B PUSH2 0xFE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x92 PUSH2 0x1AD JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x92 PUSH2 0x1C9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7B PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x4 CALLDATALOAD AND PUSH2 0x1E5 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x122 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 DUP5 AND SWAP4 SWAP1 SWAP2 AND SWAP2 PUSH32 0x343765429AEA5A34B3FF6A3785A98A5ABB2597ACA87BFBB58632C173D585373A SWAP2 LOG3 PUSH1 0x1 DUP1 SLOAD PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT SWAP1 DUP2 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND OR SWAP1 SWAP2 SSTORE AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x209 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 DUP2 AND SWAP2 AND EQ ISZERO PUSH2 0x231 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xf5 OR LOG3 0xe3 PUSH31 0xEC9B28ECD44CE325A54CC2278ACF82CA0EB693EC3B930CFA0F3A5800290000 ",
              "sourceMap": "453:1023:0:-;;;659:56;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;690:5:0;:18;;-1:-1:-1;;;;;;690:18:0;698:10;690:18;;;453:1023;;;;;;"
            },
            "deployedBytecode": {
              "linkReferences": {},
              "object": "6080604052600436106100615763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166379ba509781146100665780638da5cb5b1461007d578063d4ee1d90146100bb578063f2fde38b146100d0575b600080fd5b34801561007257600080fd5b5061007b6100fe565b005b34801561008957600080fd5b506100926101ad565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b3480156100c757600080fd5b506100926101c9565b3480156100dc57600080fd5b5061007b73ffffffffffffffffffffffffffffffffffffffff600435166101e5565b60015473ffffffffffffffffffffffffffffffffffffffff16331461012257600080fd5b6001546000805460405173ffffffffffffffffffffffffffffffffffffffff93841693909116917f343765429aea5a34b3ff6a3785a98a5abb2597aca87bfbb58632c173d585373a91a3600180546000805473ffffffffffffffffffffffffffffffffffffffff1990811673ffffffffffffffffffffffffffffffffffffffff841617909155169055565b60005473ffffffffffffffffffffffffffffffffffffffff1681565b60015473ffffffffffffffffffffffffffffffffffffffff1681565b60005473ffffffffffffffffffffffffffffffffffffffff16331461020957600080fd5b60005473ffffffffffffffffffffffffffffffffffffffff8281169116141561023157600080fd5b6001805473ffffffffffffffffffffffffffffffffffffffff191673ffffffffffffffffffffffffffffffffffffffff929092169190911790555600a165627a7a72305820f517a3e37eec9b28ecd44ce325a54cc2278acf82ca0eb693ec3b930cfa0f3a580029",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x61 JUMPI PUSH4 0xFFFFFFFF PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 CALLDATALOAD DIV AND PUSH4 0x79BA5097 DUP2 EQ PUSH2 0x66 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x7D JUMPI DUP1 PUSH4 0xD4EE1D90 EQ PUSH2 0xBB JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xD0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7B PUSH2 0xFE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x92 PUSH2 0x1AD JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x92 PUSH2 0x1C9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7B PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x4 CALLDATALOAD AND PUSH2 0x1E5 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x122 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 DUP5 AND SWAP4 SWAP1 SWAP2 AND SWAP2 PUSH32 0x343765429AEA5A34B3FF6A3785A98A5ABB2597ACA87BFBB58632C173D585373A SWAP2 LOG3 PUSH1 0x1 DUP1 SLOAD PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT SWAP1 DUP2 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND OR SWAP1 SWAP2 SSTORE AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x209 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 DUP2 AND SWAP2 AND EQ ISZERO PUSH2 0x231 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xf5 OR LOG3 0xe3 PUSH31 0xEC9B28ECD44CE325A54CC2278ACF82CA0EB693EC3B930CFA0F3A5800290000 ",
              "sourceMap": "453:1023:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1292:182;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1292:182:0;;;;;;484:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;484:20:0;;;;;;;;;;;;;;;;;;;;;;;510:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;510:23:0;;;;1069:137;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1069:137:0;;;;;;;1292:182;1358:8;;;;1344:10;:22;1336:31;;;;;;1401:8;;;1394:5;;1382:28;;1401:8;;;;;1394:5;;;;1382:28;;;1428:8;;;;1420:16;;-1:-1:-1;;1420:16:0;;;1428:8;;;1420:16;;;;1446:21;;;1292:182::o;484:20::-;;;;;;:::o;510:23::-;;;;;;:::o;1069:137::-;814:5;;;;800:10;:19;792:28;;;;;;1163:5;;;1150:18;;;1163:5;;1150:18;;1142:27;;;;;;1179:8;:20;;-1:-1:-1;;1179:20:0;;;;;;;;;;;;1069:137::o"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "133000",
                "executionCost": "20469",
                "totalCost": "153469"
              },
              "external": {
                "acceptOwnership()": "42757",
                "newOwner()": "443",
                "owner()": "421",
                "transferOwnership(address)": "20922"
              }
            },
            "methodIdentifiers": {
              "acceptOwnership()": "79ba5097",
              "newOwner()": "d4ee1d90",
              "owner()": "8da5cb5b",
              "transferOwnership(address)": "f2fde38b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.4.24+commit.e67f0147\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_prevOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"OwnerUpdate\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"acceptOwnership()\":{\"details\":\"used by a new owner to accept an ownership transfer\"},\"transferOwnership(address)\":{\"details\":\"allows transferring the contract ownership the new owner still needs to accept the transfer can only be called by the contract owner\",\"params\":{\"_newOwner\":\"new contract owner\"}}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/ConverterRegistry.sol\":\"Owned\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[]},\"sources\":{\"contracts/ConverterRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.4.24;\\n\\n/*\\n    Owned contract interface\\n*/\\ncontract IOwned {\\n    // this function isn't abstract since the compiler emits automatically generated getter functions as external\\n    function owner() public view returns (address) {}\\n\\n    function transferOwnership(address _newOwner) public;\\n    function acceptOwnership() public;\\n}\\n\\n\\n\\n/*\\n    Provides support and utilities for contract ownership\\n*/\\ncontract Owned is IOwned {\\n    address public owner;\\n    address public newOwner;\\n\\n    event OwnerUpdate(address indexed _prevOwner, address indexed _newOwner);\\n\\n    /**\\n        @dev constructor\\n    */\\n    constructor() public {\\n        owner = msg.sender;\\n    }\\n\\n    // allows execution by the owner only\\n    modifier ownerOnly {\\n        require(msg.sender == owner);\\n        _;\\n    }\\n\\n    /**\\n        @dev allows transferring the contract ownership\\n        the new owner still needs to accept the transfer\\n        can only be called by the contract owner\\n\\n        @param _newOwner    new contract owner\\n    */\\n    function transferOwnership(address _newOwner) public ownerOnly {\\n        require(_newOwner != owner);\\n        newOwner = _newOwner;\\n    }\\n\\n    /**\\n        @dev used by a new owner to accept an ownership transfer\\n    */\\n    function acceptOwnership() public {\\n        require(msg.sender == newOwner);\\n        emit OwnerUpdate(owner, newOwner);\\n        owner = newOwner;\\n        newOwner = address(0);\\n    }\\n}\\n\\n/*\\n    Utilities & Common Modifiers\\n*/\\ncontract Utils {\\n    /**\\n        constructor\\n    */\\n    constructor() public {\\n    }\\n\\n    // verifies that an amount is greater than zero\\n    modifier greaterThanZero(uint256 _amount) {\\n        require(_amount > 0);\\n        _;\\n    }\\n\\n    // validates an address - currently only checks that it isn't null\\n    modifier validAddress(address _address) {\\n        require(_address != address(0));\\n        _;\\n    }\\n\\n    // verifies that the address is different than this contract address\\n    modifier notThis(address _address) {\\n        require(_address != address(this));\\n        _;\\n    }\\n\\n}\\n\\n\\n\\n\\n/**\\n    Bancor Converter Registry\\n\\n    The bancor converter registry keeps converter addresses by token addresses and vice versa.\\n    The owner can update converter addresses so that a the token address always points to\\n    the updated list of converters for each token.\\n\\n    The contract also allows to iterate through all the tokens in the network.\\n\\n    Note that converter addresses for each token are returned in ascending order (from oldest\\n    to latest).\\n*/\\ncontract BancorConverterRegistry is Owned, Utils {\\n    mapping (address => bool) private tokensRegistered;         // token address -> registered or not\\n    mapping (address => address[]) private tokensToConverters;  // token address -> converter addresses\\n    mapping (address => address) private convertersToTokens;    // converter address -> token address\\n    address[] public tokens;                                    // list of all token addresses\\n\\n    // triggered when a converter is added to the registry\\n    event ConverterAddition(address indexed _token, address _address);\\n\\n    // triggered when a converter is removed from the registry\\n    event ConverterRemoval(address indexed _token, address _address);\\n\\n    /**\\n        @dev constructor\\n    */\\n    constructor() public {\\n    }\\n\\n    /**\\n        @dev returns the number of tokens in the registry\\n\\n        @return number of tokens\\n    */\\n    function tokenCount() public view returns (uint256) {\\n        return tokens.length;\\n    }\\n\\n    /**\\n        @dev returns the number of converters associated with the given token\\n        or 0 if the token isn't registered\\n\\n        @param _token   token address\\n\\n        @return number of converters\\n    */\\n    function converterCount(address _token) public view returns (uint256) {\\n        return tokensToConverters[_token].length;\\n    }\\n\\n    /**\\n        @dev returns the converter address associated with the given token\\n        or zero address if no such converter exists\\n\\n        @param _token   token address\\n        @param _index   converter index\\n\\n        @return converter address\\n    */\\n    function converterAddress(address _token, uint32 _index) public view returns (address) {\\n        if (_index >= tokensToConverters[_token].length)\\n            return address(0);\\n\\n        return tokensToConverters[_token][_index];\\n    }\\n\\n    /**\\n        @dev returns the token address associated with the given converter\\n        or zero address if no such converter exists\\n\\n        @param _converter   converter address\\n\\n        @return token address\\n    */\\n    function tokenAddress(address _converter) public view returns (address) {\\n        return convertersToTokens[_converter];\\n    }\\n\\n    /**\\n        @dev adds a new converter address for a given token to the registry\\n        throws if the converter is already registered\\n\\n        @param _token       token address\\n        @param _converter   converter address\\n    */\\n    function registerConverter(address _token, address _converter)\\n        public\\n        ownerOnly\\n        validAddress(_token)\\n        validAddress(_converter)\\n    {\\n        require(convertersToTokens[_converter] == address(0));\\n\\n        // add the token to the list of tokens\\n        if (!tokensRegistered[_token]) {\\n            tokens.push(_token);\\n            tokensRegistered[_token] = true;\\n        }\\n\\n        tokensToConverters[_token].push(_converter);\\n        convertersToTokens[_converter] = _token;\\n\\n        // dispatch the converter addition event\\n        emit ConverterAddition(_token, _converter);\\n    }\\n\\n    /**\\n        @dev removes an existing converter from the registry\\n        note that the function doesn't scale and might be needed to be called\\n        multiple times when removing an older converter from a large converter list\\n\\n        @param _token   token address\\n        @param _index   converter index\\n    */\\n    function unregisterConverter(address _token, uint32 _index)\\n        public\\n        ownerOnly\\n        validAddress(_token)\\n    {\\n        require(_index < tokensToConverters[_token].length);\\n\\n        address converter = tokensToConverters[_token][_index];\\n\\n        // move all newer converters 1 position lower\\n        for (uint32 i = _index + 1; i < tokensToConverters[_token].length; i++) {\\n            tokensToConverters[_token][i - 1] = tokensToConverters[_token][i];\\n        }\\n\\n        // decrease the number of converters defined for the token by 1\\n        tokensToConverters[_token].length--;\\n        \\n        // removes the converter from the converters -> tokens list\\n        delete convertersToTokens[converter];\\n\\n        // dispatch the converter removal event\\n        emit ConverterRemoval(_token, converter);\\n    }\\n}\",\"keccak256\":\"0x1d9382ec16b5e0d4cbdff87c295c13be64344b8fd0c9876f2157df02c386496f\"}},\"version\":1}",
          "userdoc": {
            "methods": {}
          }
        },
        "Utils": {
          "abi": [
            {
              "inputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "constructor"
            }
          ],
          "devdoc": {
            "methods": {}
          },
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "6080604052348015600f57600080fd5b50603580601d6000396000f3006080604052600080fd00a165627a7a723058201bd4e2e89d1f6313d5044feea203127c477adf732ec906169cb8ef58419166fc0029",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x35 DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 SHL 0xd4 0xe2 0xe8 SWAP14 0x1f PUSH4 0x13D5044F 0xee LOG2 SUB SLT PUSH29 0x477ADF732EC906169CB8EF58419166FC00290000000000000000000000 ",
              "sourceMap": "1517:587:0:-;;;1573:28;8:9:-1;5:2;;;30:1;27;20:12;5:2;1573:28:0;1517:587;;;;;;"
            },
            "deployedBytecode": {
              "linkReferences": {},
              "object": "6080604052600080fd00a165627a7a723058201bd4e2e89d1f6313d5044feea203127c477adf732ec906169cb8ef58419166fc0029",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 SHL 0xd4 0xe2 0xe8 SWAP14 0x1f PUSH4 0x13D5044F 0xee LOG2 SUB SLT PUSH29 0x477ADF732EC906169CB8EF58419166FC00290000000000000000000000 ",
              "sourceMap": "1517:587:0:-;;;;;"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "10600",
                "executionCost": "66",
                "totalCost": "10666"
              }
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.4.24+commit.e67f0147\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/ConverterRegistry.sol\":\"Utils\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[]},\"sources\":{\"contracts/ConverterRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.4.24;\\n\\n/*\\n    Owned contract interface\\n*/\\ncontract IOwned {\\n    // this function isn't abstract since the compiler emits automatically generated getter functions as external\\n    function owner() public view returns (address) {}\\n\\n    function transferOwnership(address _newOwner) public;\\n    function acceptOwnership() public;\\n}\\n\\n\\n\\n/*\\n    Provides support and utilities for contract ownership\\n*/\\ncontract Owned is IOwned {\\n    address public owner;\\n    address public newOwner;\\n\\n    event OwnerUpdate(address indexed _prevOwner, address indexed _newOwner);\\n\\n    /**\\n        @dev constructor\\n    */\\n    constructor() public {\\n        owner = msg.sender;\\n    }\\n\\n    // allows execution by the owner only\\n    modifier ownerOnly {\\n        require(msg.sender == owner);\\n        _;\\n    }\\n\\n    /**\\n        @dev allows transferring the contract ownership\\n        the new owner still needs to accept the transfer\\n        can only be called by the contract owner\\n\\n        @param _newOwner    new contract owner\\n    */\\n    function transferOwnership(address _newOwner) public ownerOnly {\\n        require(_newOwner != owner);\\n        newOwner = _newOwner;\\n    }\\n\\n    /**\\n        @dev used by a new owner to accept an ownership transfer\\n    */\\n    function acceptOwnership() public {\\n        require(msg.sender == newOwner);\\n        emit OwnerUpdate(owner, newOwner);\\n        owner = newOwner;\\n        newOwner = address(0);\\n    }\\n}\\n\\n/*\\n    Utilities & Common Modifiers\\n*/\\ncontract Utils {\\n    /**\\n        constructor\\n    */\\n    constructor() public {\\n    }\\n\\n    // verifies that an amount is greater than zero\\n    modifier greaterThanZero(uint256 _amount) {\\n        require(_amount > 0);\\n        _;\\n    }\\n\\n    // validates an address - currently only checks that it isn't null\\n    modifier validAddress(address _address) {\\n        require(_address != address(0));\\n        _;\\n    }\\n\\n    // verifies that the address is different than this contract address\\n    modifier notThis(address _address) {\\n        require(_address != address(this));\\n        _;\\n    }\\n\\n}\\n\\n\\n\\n\\n/**\\n    Bancor Converter Registry\\n\\n    The bancor converter registry keeps converter addresses by token addresses and vice versa.\\n    The owner can update converter addresses so that a the token address always points to\\n    the updated list of converters for each token.\\n\\n    The contract also allows to iterate through all the tokens in the network.\\n\\n    Note that converter addresses for each token are returned in ascending order (from oldest\\n    to latest).\\n*/\\ncontract BancorConverterRegistry is Owned, Utils {\\n    mapping (address => bool) private tokensRegistered;         // token address -> registered or not\\n    mapping (address => address[]) private tokensToConverters;  // token address -> converter addresses\\n    mapping (address => address) private convertersToTokens;    // converter address -> token address\\n    address[] public tokens;                                    // list of all token addresses\\n\\n    // triggered when a converter is added to the registry\\n    event ConverterAddition(address indexed _token, address _address);\\n\\n    // triggered when a converter is removed from the registry\\n    event ConverterRemoval(address indexed _token, address _address);\\n\\n    /**\\n        @dev constructor\\n    */\\n    constructor() public {\\n    }\\n\\n    /**\\n        @dev returns the number of tokens in the registry\\n\\n        @return number of tokens\\n    */\\n    function tokenCount() public view returns (uint256) {\\n        return tokens.length;\\n    }\\n\\n    /**\\n        @dev returns the number of converters associated with the given token\\n        or 0 if the token isn't registered\\n\\n        @param _token   token address\\n\\n        @return number of converters\\n    */\\n    function converterCount(address _token) public view returns (uint256) {\\n        return tokensToConverters[_token].length;\\n    }\\n\\n    /**\\n        @dev returns the converter address associated with the given token\\n        or zero address if no such converter exists\\n\\n        @param _token   token address\\n        @param _index   converter index\\n\\n        @return converter address\\n    */\\n    function converterAddress(address _token, uint32 _index) public view returns (address) {\\n        if (_index >= tokensToConverters[_token].length)\\n            return address(0);\\n\\n        return tokensToConverters[_token][_index];\\n    }\\n\\n    /**\\n        @dev returns the token address associated with the given converter\\n        or zero address if no such converter exists\\n\\n        @param _converter   converter address\\n\\n        @return token address\\n    */\\n    function tokenAddress(address _converter) public view returns (address) {\\n        return convertersToTokens[_converter];\\n    }\\n\\n    /**\\n        @dev adds a new converter address for a given token to the registry\\n        throws if the converter is already registered\\n\\n        @param _token       token address\\n        @param _converter   converter address\\n    */\\n    function registerConverter(address _token, address _converter)\\n        public\\n        ownerOnly\\n        validAddress(_token)\\n        validAddress(_converter)\\n    {\\n        require(convertersToTokens[_converter] == address(0));\\n\\n        // add the token to the list of tokens\\n        if (!tokensRegistered[_token]) {\\n            tokens.push(_token);\\n            tokensRegistered[_token] = true;\\n        }\\n\\n        tokensToConverters[_token].push(_converter);\\n        convertersToTokens[_converter] = _token;\\n\\n        // dispatch the converter addition event\\n        emit ConverterAddition(_token, _converter);\\n    }\\n\\n    /**\\n        @dev removes an existing converter from the registry\\n        note that the function doesn't scale and might be needed to be called\\n        multiple times when removing an older converter from a large converter list\\n\\n        @param _token   token address\\n        @param _index   converter index\\n    */\\n    function unregisterConverter(address _token, uint32 _index)\\n        public\\n        ownerOnly\\n        validAddress(_token)\\n    {\\n        require(_index < tokensToConverters[_token].length);\\n\\n        address converter = tokensToConverters[_token][_index];\\n\\n        // move all newer converters 1 position lower\\n        for (uint32 i = _index + 1; i < tokensToConverters[_token].length; i++) {\\n            tokensToConverters[_token][i - 1] = tokensToConverters[_token][i];\\n        }\\n\\n        // decrease the number of converters defined for the token by 1\\n        tokensToConverters[_token].length--;\\n        \\n        // removes the converter from the converters -> tokens list\\n        delete convertersToTokens[converter];\\n\\n        // dispatch the converter removal event\\n        emit ConverterRemoval(_token, converter);\\n    }\\n}\",\"keccak256\":\"0x1d9382ec16b5e0d4cbdff87c295c13be64344b8fd0c9876f2157df02c386496f\"}},\"version\":1}",
          "userdoc": {
            "methods": {}
          }
        }
      }
    },
    "errors": [
      {
        "component": "general",
        "formattedMessage": "contracts/ConverterRegistry.sol:9:5: Warning: Function state mutability can be restricted to pure\n    function owner() public view returns (address) {}\n    ^-----------------------------------------------^\n",
        "message": "Function state mutability can be restricted to pure",
        "severity": "warning",
        "sourceLocation": {
          "end": 285,
          "file": "contracts/ConverterRegistry.sol",
          "start": 236
        },
        "type": "Warning"
      }
    ],
    "sources": {
      "contracts/ConverterRegistry.sol": {
        "ast": {
          "absolutePath": "contracts/ConverterRegistry.sol",
          "exportedSymbols": {
            "BancorConverterRegistry": [
              375
            ],
            "IOwned": [
              16
            ],
            "Owned": [
              93
            ],
            "Utils": [
              138
            ]
          },
          "id": 376,
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.4",
                ".24"
              ],
              "nodeType": "PragmaDirective",
              "src": "39:24:0"
            },
            {
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": null,
              "fullyImplemented": false,
              "id": 16,
              "linearizedBaseContracts": [
                16
              ],
              "name": "IOwned",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 6,
                    "nodeType": "Block",
                    "src": "283:2:0",
                    "statements": []
                  },
                  "documentation": null,
                  "id": 7,
                  "implemented": true,
                  "isConstructor": false,
                  "isDeclaredConst": true,
                  "modifiers": [],
                  "name": "owner",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "250:2:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 5,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 7,
                        "src": "274:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "274:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "273:9:0"
                  },
                  "scope": 16,
                  "src": "236:49:0",
                  "stateMutability": "view",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": null,
                  "documentation": null,
                  "id": 12,
                  "implemented": false,
                  "isConstructor": false,
                  "isDeclaredConst": false,
                  "modifiers": [],
                  "name": "transferOwnership",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 10,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 9,
                        "name": "_newOwner",
                        "nodeType": "VariableDeclaration",
                        "scope": 12,
                        "src": "318:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 8,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "318:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "317:19:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 11,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "343:0:0"
                  },
                  "scope": 16,
                  "src": "291:53:0",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": null,
                  "documentation": null,
                  "id": 15,
                  "implemented": false,
                  "isConstructor": false,
                  "isDeclaredConst": false,
                  "modifiers": [],
                  "name": "acceptOwnership",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 13,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "373:2:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 14,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "382:0:0"
                  },
                  "scope": 16,
                  "src": "349:34:0",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "public"
                }
              ],
              "scope": 376,
              "src": "100:285:0"
            },
            {
              "baseContracts": [
                {
                  "arguments": null,
                  "baseName": {
                    "contractScope": null,
                    "id": 17,
                    "name": "IOwned",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 16,
                    "src": "471:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IOwned_$16",
                      "typeString": "contract IOwned"
                    }
                  },
                  "id": 18,
                  "nodeType": "InheritanceSpecifier",
                  "src": "471:6:0"
                }
              ],
              "contractDependencies": [
                16
              ],
              "contractKind": "contract",
              "documentation": null,
              "fullyImplemented": true,
              "id": 93,
              "linearizedBaseContracts": [
                93,
                16
              ],
              "name": "Owned",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 20,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 93,
                  "src": "484:20:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "484:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 22,
                  "name": "newOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 93,
                  "src": "510:23:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "510:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "anonymous": false,
                  "documentation": null,
                  "id": 28,
                  "name": "OwnerUpdate",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 27,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 24,
                        "indexed": true,
                        "name": "_prevOwner",
                        "nodeType": "VariableDeclaration",
                        "scope": 28,
                        "src": "558:26:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 23,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "558:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 26,
                        "indexed": true,
                        "name": "_newOwner",
                        "nodeType": "VariableDeclaration",
                        "scope": 28,
                        "src": "586:25:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 25,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "586:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "557:55:0"
                  },
                  "src": "540:73:0"
                },
                {
                  "body": {
                    "id": 36,
                    "nodeType": "Block",
                    "src": "680:35:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 34,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 31,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              20
                            ],
                            "referencedDeclaration": 20,
                            "src": "690:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 32,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 390,
                              "src": "698:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 33,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "698:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "690:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 35,
                        "nodeType": "ExpressionStatement",
                        "src": "690:18:0"
                      }
                    ]
                  },
                  "documentation": "@dev constructor",
                  "id": 37,
                  "implemented": true,
                  "isConstructor": true,
                  "isDeclaredConst": false,
                  "modifiers": [],
                  "name": "",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 29,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "670:2:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 30,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "680:0:0"
                  },
                  "scope": 93,
                  "src": "659:56:0",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 47,
                    "nodeType": "Block",
                    "src": "782:56:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 43,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 40,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 390,
                                  "src": "800:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 41,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "800:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 42,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  20
                                ],
                                "referencedDeclaration": 20,
                                "src": "814:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "800:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 39,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              393,
                              394
                            ],
                            "referencedDeclaration": 393,
                            "src": "792:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 44,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "792:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 45,
                        "nodeType": "ExpressionStatement",
                        "src": "792:28:0"
                      },
                      {
                        "id": 46,
                        "nodeType": "PlaceholderStatement",
                        "src": "830:1:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 48,
                  "name": "ownerOnly",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 38,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "782:0:0"
                  },
                  "src": "763:75:0",
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 65,
                    "nodeType": "Block",
                    "src": "1132:74:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 58,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 56,
                                "name": "_newOwner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 50,
                                "src": "1150:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 57,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  20
                                ],
                                "referencedDeclaration": 20,
                                "src": "1163:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "1150:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 55,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              393,
                              394
                            ],
                            "referencedDeclaration": 393,
                            "src": "1142:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 59,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1142:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 60,
                        "nodeType": "ExpressionStatement",
                        "src": "1142:27:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 63,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 61,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22,
                            "src": "1179:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 62,
                            "name": "_newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50,
                            "src": "1190:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1179:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 64,
                        "nodeType": "ExpressionStatement",
                        "src": "1179:20:0"
                      }
                    ]
                  },
                  "documentation": "@dev allows transferring the contract ownership\nthe new owner still needs to accept the transfer\ncan only be called by the contract owner\n@param _newOwner    new contract owner",
                  "id": 66,
                  "implemented": true,
                  "isConstructor": false,
                  "isDeclaredConst": false,
                  "modifiers": [
                    {
                      "arguments": null,
                      "id": 53,
                      "modifierName": {
                        "argumentTypes": null,
                        "id": 52,
                        "name": "ownerOnly",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "1122:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$__$",
                          "typeString": "modifier ()"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1122:9:0"
                    }
                  ],
                  "name": "transferOwnership",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 51,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 50,
                        "name": "_newOwner",
                        "nodeType": "VariableDeclaration",
                        "scope": 66,
                        "src": "1096:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 49,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1096:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1095:19:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 54,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1132:0:0"
                  },
                  "scope": 93,
                  "src": "1069:137:0",
                  "stateMutability": "nonpayable",
                  "superFunction": 12,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 91,
                    "nodeType": "Block",
                    "src": "1326:148:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 73,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 70,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 390,
                                  "src": "1344:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 71,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "1344:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 72,
                                "name": "newOwner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22,
                                "src": "1358:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "1344:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 69,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              393,
                              394
                            ],
                            "referencedDeclaration": 393,
                            "src": "1336:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 74,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1336:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 75,
                        "nodeType": "ExpressionStatement",
                        "src": "1336:31:0"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 77,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                20
                              ],
                              "referencedDeclaration": 20,
                              "src": "1394:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 78,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22,
                              "src": "1401:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 76,
                            "name": "OwnerUpdate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28,
                            "src": "1382:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 79,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1382:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 80,
                        "nodeType": "EmitStatement",
                        "src": "1377:33:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 83,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 81,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              20
                            ],
                            "referencedDeclaration": 20,
                            "src": "1420:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 82,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22,
                            "src": "1428:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1420:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 84,
                        "nodeType": "ExpressionStatement",
                        "src": "1420:16:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 89,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 85,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22,
                            "src": "1446:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 87,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1465:1:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 86,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1457:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 88,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1457:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1446:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 90,
                        "nodeType": "ExpressionStatement",
                        "src": "1446:21:0"
                      }
                    ]
                  },
                  "documentation": "@dev used by a new owner to accept an ownership transfer",
                  "id": 92,
                  "implemented": true,
                  "isConstructor": false,
                  "isDeclaredConst": false,
                  "modifiers": [],
                  "name": "acceptOwnership",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 67,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1316:2:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 68,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1326:0:0"
                  },
                  "scope": 93,
                  "src": "1292:182:0",
                  "stateMutability": "nonpayable",
                  "superFunction": 15,
                  "visibility": "public"
                }
              ],
              "scope": 376,
              "src": "453:1023:0"
            },
            {
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": null,
              "fullyImplemented": true,
              "id": 138,
              "linearizedBaseContracts": [
                138
              ],
              "name": "Utils",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 96,
                    "nodeType": "Block",
                    "src": "1594:7:0",
                    "statements": []
                  },
                  "documentation": "constructor",
                  "id": 97,
                  "implemented": true,
                  "isConstructor": true,
                  "isDeclaredConst": false,
                  "modifiers": [],
                  "name": "",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 94,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1584:2:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 95,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1594:0:0"
                  },
                  "scope": 138,
                  "src": "1573:28:0",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 108,
                    "nodeType": "Block",
                    "src": "1701:48:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 104,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 102,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 99,
                                "src": "1719:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 103,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1729:1:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "1719:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 101,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              393,
                              394
                            ],
                            "referencedDeclaration": 393,
                            "src": "1711:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 105,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1711:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 106,
                        "nodeType": "ExpressionStatement",
                        "src": "1711:20:0"
                      },
                      {
                        "id": 107,
                        "nodeType": "PlaceholderStatement",
                        "src": "1741:1:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 109,
                  "name": "greaterThanZero",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 100,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 99,
                        "name": "_amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 109,
                        "src": "1684:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 98,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1684:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1683:17:0"
                  },
                  "src": "1659:90:0",
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 122,
                    "nodeType": "Block",
                    "src": "1866:59:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 118,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 114,
                                "name": "_address",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 111,
                                "src": "1884:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "30",
                                    "id": 116,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1904:1:0",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 115,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1896:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": "address"
                                },
                                "id": 117,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1896:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "1884:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 113,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              393,
                              394
                            ],
                            "referencedDeclaration": 393,
                            "src": "1876:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 119,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1876:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 120,
                        "nodeType": "ExpressionStatement",
                        "src": "1876:31:0"
                      },
                      {
                        "id": 121,
                        "nodeType": "PlaceholderStatement",
                        "src": "1917:1:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 123,
                  "name": "validAddress",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 112,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 111,
                        "name": "_address",
                        "nodeType": "VariableDeclaration",
                        "scope": 123,
                        "src": "1848:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 110,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1848:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1847:18:0"
                  },
                  "src": "1826:99:0",
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 136,
                    "nodeType": "Block",
                    "src": "2039:62:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 132,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 128,
                                "name": "_address",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 125,
                                "src": "2057:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 130,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 407,
                                    "src": "2077:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Utils_$138",
                                      "typeString": "contract Utils"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_Utils_$138",
                                      "typeString": "contract Utils"
                                    }
                                  ],
                                  "id": 129,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2069:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": "address"
                                },
                                "id": 131,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2069:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "2057:25:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 127,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              393,
                              394
                            ],
                            "referencedDeclaration": 393,
                            "src": "2049:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 133,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2049:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 134,
                        "nodeType": "ExpressionStatement",
                        "src": "2049:34:0"
                      },
                      {
                        "id": 135,
                        "nodeType": "PlaceholderStatement",
                        "src": "2093:1:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 137,
                  "name": "notThis",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 126,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 125,
                        "name": "_address",
                        "nodeType": "VariableDeclaration",
                        "scope": 137,
                        "src": "2021:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 124,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2021:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "2020:18:0"
                  },
                  "src": "2004:97:0",
                  "visibility": "internal"
                }
              ],
              "scope": 376,
              "src": "1517:587:0"
            },
            {
              "baseContracts": [
                {
                  "arguments": null,
                  "baseName": {
                    "contractScope": null,
                    "id": 139,
                    "name": "Owned",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 93,
                    "src": "2610:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Owned_$93",
                      "typeString": "contract Owned"
                    }
                  },
                  "id": 140,
                  "nodeType": "InheritanceSpecifier",
                  "src": "2610:5:0"
                },
                {
                  "arguments": null,
                  "baseName": {
                    "contractScope": null,
                    "id": 141,
                    "name": "Utils",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 138,
                    "src": "2617:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Utils_$138",
                      "typeString": "contract Utils"
                    }
                  },
                  "id": 142,
                  "nodeType": "InheritanceSpecifier",
                  "src": "2617:5:0"
                }
              ],
              "contractDependencies": [
                16,
                93,
                138
              ],
              "contractKind": "contract",
              "documentation": "Bancor Converter Registry\nThe bancor converter registry keeps converter addresses by token addresses and vice versa.\nThe owner can update converter addresses so that a the token address always points to\nthe updated list of converters for each token.\nThe contract also allows to iterate through all the tokens in the network.\nNote that converter addresses for each token are returned in ascending order (from oldest\nto latest).",
              "fullyImplemented": true,
              "id": 375,
              "linearizedBaseContracts": [
                375,
                138,
                93,
                16
              ],
              "name": "BancorConverterRegistry",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 146,
                  "name": "tokensRegistered",
                  "nodeType": "VariableDeclaration",
                  "scope": 375,
                  "src": "2629:50:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                    "typeString": "mapping(address => bool)"
                  },
                  "typeName": {
                    "id": 145,
                    "keyType": {
                      "id": 143,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2638:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "2629:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                      "typeString": "mapping(address => bool)"
                    },
                    "valueType": {
                      "id": 144,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "2649:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    }
                  },
                  "value": null,
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 151,
                  "name": "tokensToConverters",
                  "nodeType": "VariableDeclaration",
                  "scope": 375,
                  "src": "2731:57:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                    "typeString": "mapping(address => address[])"
                  },
                  "typeName": {
                    "id": 150,
                    "keyType": {
                      "id": 147,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2740:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "2731:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                      "typeString": "mapping(address => address[])"
                    },
                    "valueType": {
                      "baseType": {
                        "id": 148,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2751:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 149,
                      "length": null,
                      "nodeType": "ArrayTypeName",
                      "src": "2751:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                        "typeString": "address[]"
                      }
                    }
                  },
                  "value": null,
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 155,
                  "name": "convertersToTokens",
                  "nodeType": "VariableDeclaration",
                  "scope": 375,
                  "src": "2835:55:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                    "typeString": "mapping(address => address)"
                  },
                  "typeName": {
                    "id": 154,
                    "keyType": {
                      "id": 152,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2844:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "2835:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                      "typeString": "mapping(address => address)"
                    },
                    "valueType": {
                      "id": 153,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2855:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    }
                  },
                  "value": null,
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 158,
                  "name": "tokens",
                  "nodeType": "VariableDeclaration",
                  "scope": 375,
                  "src": "2937:23:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 156,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2937:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 157,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2937:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "anonymous": false,
                  "documentation": null,
                  "id": 164,
                  "name": "ConverterAddition",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 163,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 160,
                        "indexed": true,
                        "name": "_token",
                        "nodeType": "VariableDeclaration",
                        "scope": 164,
                        "src": "3116:22:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 159,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3116:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 162,
                        "indexed": false,
                        "name": "_address",
                        "nodeType": "VariableDeclaration",
                        "scope": 164,
                        "src": "3140:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 161,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3140:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "3115:42:0"
                  },
                  "src": "3092:66:0"
                },
                {
                  "anonymous": false,
                  "documentation": null,
                  "id": 170,
                  "name": "ConverterRemoval",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 169,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 166,
                        "indexed": true,
                        "name": "_token",
                        "nodeType": "VariableDeclaration",
                        "scope": 170,
                        "src": "3250:22:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 165,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3250:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 168,
                        "indexed": false,
                        "name": "_address",
                        "nodeType": "VariableDeclaration",
                        "scope": 170,
                        "src": "3274:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 167,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3274:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "3249:42:0"
                  },
                  "src": "3227:65:0"
                },
                {
                  "body": {
                    "id": 173,
                    "nodeType": "Block",
                    "src": "3359:7:0",
                    "statements": []
                  },
                  "documentation": "@dev constructor",
                  "id": 174,
                  "implemented": true,
                  "isConstructor": true,
                  "isDeclaredConst": false,
                  "modifiers": [],
                  "name": "",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 171,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3349:2:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 172,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3359:0:0"
                  },
                  "scope": 375,
                  "src": "3338:28:0",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 182,
                    "nodeType": "Block",
                    "src": "3531:37:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 179,
                            "name": "tokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 158,
                            "src": "3548:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 180,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3548:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 178,
                        "id": 181,
                        "nodeType": "Return",
                        "src": "3541:20:0"
                      }
                    ]
                  },
                  "documentation": "@dev returns the number of tokens in the registry\n@return number of tokens",
                  "id": 183,
                  "implemented": true,
                  "isConstructor": false,
                  "isDeclaredConst": true,
                  "modifiers": [],
                  "name": "tokenCount",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 175,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3498:2:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 178,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 177,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 183,
                        "src": "3522:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 176,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3522:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "3521:9:0"
                  },
                  "scope": 375,
                  "src": "3479:89:0",
                  "stateMutability": "view",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 195,
                    "nodeType": "Block",
                    "src": "3857:57:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 190,
                              "name": "tokensToConverters",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 151,
                              "src": "3874:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                                "typeString": "mapping(address => address[] storage ref)"
                              }
                            },
                            "id": 192,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 191,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 185,
                              "src": "3893:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3874:26:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 193,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3874:33:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 189,
                        "id": 194,
                        "nodeType": "Return",
                        "src": "3867:40:0"
                      }
                    ]
                  },
                  "documentation": "@dev returns the number of converters associated with the given token\nor 0 if the token isn't registered\n@param _token   token address\n@return number of converters",
                  "id": 196,
                  "implemented": true,
                  "isConstructor": false,
                  "isDeclaredConst": true,
                  "modifiers": [],
                  "name": "converterCount",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 186,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 185,
                        "name": "_token",
                        "nodeType": "VariableDeclaration",
                        "scope": 196,
                        "src": "3811:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 184,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3811:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "3810:16:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 189,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 188,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 196,
                        "src": "3848:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 187,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3848:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "3847:9:0"
                  },
                  "scope": 375,
                  "src": "3787:127:0",
                  "stateMutability": "view",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 222,
                    "nodeType": "Block",
                    "src": "4263:147:0",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 210,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 205,
                            "name": "_index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 200,
                            "src": "4277:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 206,
                                "name": "tokensToConverters",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 151,
                                "src": "4287:18:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                                  "typeString": "mapping(address => address[] storage ref)"
                                }
                              },
                              "id": 208,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 207,
                                "name": "_token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 198,
                                "src": "4306:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4287:26:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 209,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4287:33:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4277:43:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 215,
                        "nodeType": "IfStatement",
                        "src": "4273:78:0",
                        "trueBody": {
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 212,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4349:1:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 211,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4341:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 213,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4341:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "functionReturnParameters": 204,
                          "id": 214,
                          "nodeType": "Return",
                          "src": "4334:17:0"
                        }
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 216,
                              "name": "tokensToConverters",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 151,
                              "src": "4369:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                                "typeString": "mapping(address => address[] storage ref)"
                              }
                            },
                            "id": 218,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 217,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 198,
                              "src": "4388:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4369:26:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 220,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 219,
                            "name": "_index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 200,
                            "src": "4396:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4369:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 204,
                        "id": 221,
                        "nodeType": "Return",
                        "src": "4362:41:0"
                      }
                    ]
                  },
                  "documentation": "@dev returns the converter address associated with the given token\nor zero address if no such converter exists\n@param _token   token address\n@param _index   converter index\n@return converter address",
                  "id": 223,
                  "implemented": true,
                  "isConstructor": false,
                  "isDeclaredConst": true,
                  "modifiers": [],
                  "name": "converterAddress",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 201,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 198,
                        "name": "_token",
                        "nodeType": "VariableDeclaration",
                        "scope": 223,
                        "src": "4202:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 197,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4202:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 200,
                        "name": "_index",
                        "nodeType": "VariableDeclaration",
                        "scope": 223,
                        "src": "4218:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 199,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4218:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "4201:31:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 204,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 203,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 223,
                        "src": "4254:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 202,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4254:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "4253:9:0"
                  },
                  "scope": 375,
                  "src": "4176:234:0",
                  "stateMutability": "view",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 234,
                    "nodeType": "Block",
                    "src": "4708:54:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 230,
                            "name": "convertersToTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 155,
                            "src": "4725:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 232,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 231,
                            "name": "_converter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 225,
                            "src": "4744:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4725:30:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 229,
                        "id": 233,
                        "nodeType": "Return",
                        "src": "4718:37:0"
                      }
                    ]
                  },
                  "documentation": "@dev returns the token address associated with the given converter\nor zero address if no such converter exists\n@param _converter   converter address\n@return token address",
                  "id": 235,
                  "implemented": true,
                  "isConstructor": false,
                  "isDeclaredConst": true,
                  "modifiers": [],
                  "name": "tokenAddress",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 226,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 225,
                        "name": "_converter",
                        "nodeType": "VariableDeclaration",
                        "scope": 235,
                        "src": "4658:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 224,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4658:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "4657:20:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 229,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 228,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 235,
                        "src": "4699:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 227,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4699:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "4698:9:0"
                  },
                  "scope": 375,
                  "src": "4636:126:0",
                  "stateMutability": "view",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 296,
                    "nodeType": "Block",
                    "src": "5164:452:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 257,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 251,
                                  "name": "convertersToTokens",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 155,
                                  "src": "5182:18:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                    "typeString": "mapping(address => address)"
                                  }
                                },
                                "id": 253,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 252,
                                  "name": "_converter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 239,
                                  "src": "5201:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5182:30:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "30",
                                    "id": 255,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5224:1:0",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 254,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5216:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": "address"
                                },
                                "id": 256,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5216:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "5182:44:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 250,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              393,
                              394
                            ],
                            "referencedDeclaration": 393,
                            "src": "5174:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 258,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5174:53:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 259,
                        "nodeType": "ExpressionStatement",
                        "src": "5174:53:0"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "id": 263,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "5289:25:0",
                          "subExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 260,
                              "name": "tokensRegistered",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 146,
                              "src": "5290:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 262,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 261,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 237,
                              "src": "5307:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5290:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 277,
                        "nodeType": "IfStatement",
                        "src": "5285:120:0",
                        "trueBody": {
                          "id": 276,
                          "nodeType": "Block",
                          "src": "5316:89:0",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 267,
                                    "name": "_token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 237,
                                    "src": "5342:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 264,
                                    "name": "tokens",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 158,
                                    "src": "5330:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 266,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "push",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "5330:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) returns (uint256)"
                                  }
                                },
                                "id": 268,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5330:19:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 269,
                              "nodeType": "ExpressionStatement",
                              "src": "5330:19:0"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 274,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 270,
                                    "name": "tokensRegistered",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 146,
                                    "src": "5363:16:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                      "typeString": "mapping(address => bool)"
                                    }
                                  },
                                  "id": 272,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 271,
                                    "name": "_token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 237,
                                    "src": "5380:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "5363:24:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "hexValue": "74727565",
                                  "id": 273,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5390:4:0",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "5363:31:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 275,
                              "nodeType": "ExpressionStatement",
                              "src": "5363:31:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 282,
                              "name": "_converter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 239,
                              "src": "5447:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 278,
                                "name": "tokensToConverters",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 151,
                                "src": "5415:18:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                                  "typeString": "mapping(address => address[] storage ref)"
                                }
                              },
                              "id": 280,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 279,
                                "name": "_token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 237,
                                "src": "5434:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5415:26:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 281,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "5415:31:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) returns (uint256)"
                            }
                          },
                          "id": 283,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5415:43:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 284,
                        "nodeType": "ExpressionStatement",
                        "src": "5415:43:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 289,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 285,
                              "name": "convertersToTokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 155,
                              "src": "5468:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                "typeString": "mapping(address => address)"
                              }
                            },
                            "id": 287,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 286,
                              "name": "_converter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 239,
                              "src": "5487:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5468:30:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 288,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 237,
                            "src": "5501:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5468:39:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 290,
                        "nodeType": "ExpressionStatement",
                        "src": "5468:39:0"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 292,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 237,
                              "src": "5590:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 293,
                              "name": "_converter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 239,
                              "src": "5598:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 291,
                            "name": "ConverterAddition",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 164,
                            "src": "5572:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 294,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5572:37:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 295,
                        "nodeType": "EmitStatement",
                        "src": "5567:42:0"
                      }
                    ]
                  },
                  "documentation": "@dev adds a new converter address for a given token to the registry\nthrows if the converter is already registered\n@param _token       token address\n@param _converter   converter address",
                  "id": 297,
                  "implemented": true,
                  "isConstructor": false,
                  "isDeclaredConst": false,
                  "modifiers": [
                    {
                      "arguments": null,
                      "id": 242,
                      "modifierName": {
                        "argumentTypes": null,
                        "id": 241,
                        "name": "ownerOnly",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "5088:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$__$",
                          "typeString": "modifier ()"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "5088:9:0"
                    },
                    {
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 244,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 237,
                          "src": "5119:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 245,
                      "modifierName": {
                        "argumentTypes": null,
                        "id": 243,
                        "name": "validAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 123,
                        "src": "5106:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$_t_address_$",
                          "typeString": "modifier (address)"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "5106:20:0"
                    },
                    {
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 247,
                          "name": "_converter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 239,
                          "src": "5148:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 248,
                      "modifierName": {
                        "argumentTypes": null,
                        "id": 246,
                        "name": "validAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 123,
                        "src": "5135:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$_t_address_$",
                          "typeString": "modifier (address)"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "5135:24:0"
                    }
                  ],
                  "name": "registerConverter",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 240,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 237,
                        "name": "_token",
                        "nodeType": "VariableDeclaration",
                        "scope": 297,
                        "src": "5029:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 236,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5029:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 239,
                        "name": "_converter",
                        "nodeType": "VariableDeclaration",
                        "scope": 297,
                        "src": "5045:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 238,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5045:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "5028:36:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 249,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5164:0:0"
                  },
                  "scope": 375,
                  "src": "5002:614:0",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 373,
                    "nodeType": "Block",
                    "src": "6065:699:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 315,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 310,
                                "name": "_index",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 301,
                                "src": "6083:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 311,
                                    "name": "tokensToConverters",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 151,
                                    "src": "6092:18:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                                      "typeString": "mapping(address => address[] storage ref)"
                                    }
                                  },
                                  "id": 313,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 312,
                                    "name": "_token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 299,
                                    "src": "6111:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "6092:26:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                    "typeString": "address[] storage ref"
                                  }
                                },
                                "id": 314,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "6092:33:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6083:42:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 309,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              393,
                              394
                            ],
                            "referencedDeclaration": 393,
                            "src": "6075:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 316,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6075:51:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 317,
                        "nodeType": "ExpressionStatement",
                        "src": "6075:51:0"
                      },
                      {
                        "assignments": [
                          319
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 319,
                            "name": "converter",
                            "nodeType": "VariableDeclaration",
                            "scope": 374,
                            "src": "6137:17:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 318,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6137:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 325,
                        "initialValue": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 320,
                              "name": "tokensToConverters",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 151,
                              "src": "6157:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                                "typeString": "mapping(address => address[] storage ref)"
                              }
                            },
                            "id": 322,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 321,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 299,
                              "src": "6176:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6157:26:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 324,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 323,
                            "name": "_index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 301,
                            "src": "6184:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6157:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6137:54:0"
                      },
                      {
                        "body": {
                          "id": 355,
                          "nodeType": "Block",
                          "src": "6328:90:0",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 353,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 341,
                                      "name": "tokensToConverters",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 151,
                                      "src": "6342:18:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                                        "typeString": "mapping(address => address[] storage ref)"
                                      }
                                    },
                                    "id": 346,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 342,
                                      "name": "_token",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 299,
                                      "src": "6361:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "6342:26:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 347,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    },
                                    "id": 345,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "argumentTypes": null,
                                      "id": 343,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 327,
                                      "src": "6369:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint32",
                                        "typeString": "uint32"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "argumentTypes": null,
                                      "hexValue": "31",
                                      "id": 344,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "6373:1:0",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "6369:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "6342:33:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 348,
                                      "name": "tokensToConverters",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 151,
                                      "src": "6378:18:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                                        "typeString": "mapping(address => address[] storage ref)"
                                      }
                                    },
                                    "id": 350,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 349,
                                      "name": "_token",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 299,
                                      "src": "6397:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "6378:26:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 352,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 351,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 327,
                                    "src": "6405:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "6378:29:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "6342:65:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 354,
                              "nodeType": "ExpressionStatement",
                              "src": "6342:65:0"
                            }
                          ]
                        },
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 337,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 332,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 327,
                            "src": "6284:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 333,
                                "name": "tokensToConverters",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 151,
                                "src": "6288:18:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                                  "typeString": "mapping(address => address[] storage ref)"
                                }
                              },
                              "id": 335,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 334,
                                "name": "_token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 299,
                                "src": "6307:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6288:26:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 336,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "6288:33:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6284:37:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 356,
                        "initializationExpression": {
                          "assignments": [
                            327
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 327,
                              "name": "i",
                              "nodeType": "VariableDeclaration",
                              "scope": 374,
                              "src": "6261:8:0",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              },
                              "typeName": {
                                "id": 326,
                                "name": "uint32",
                                "nodeType": "ElementaryTypeName",
                                "src": "6261:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "value": null,
                              "visibility": "internal"
                            }
                          ],
                          "id": 331,
                          "initialValue": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            "id": 330,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 328,
                              "name": "_index",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 301,
                              "src": "6272:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 329,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6281:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "6272:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "6261:21:0"
                        },
                        "loopExpression": {
                          "expression": {
                            "argumentTypes": null,
                            "id": 339,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "6323:3:0",
                            "subExpression": {
                              "argumentTypes": null,
                              "id": 338,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 327,
                              "src": "6323:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "id": 340,
                          "nodeType": "ExpressionStatement",
                          "src": "6323:3:0"
                        },
                        "nodeType": "ForStatement",
                        "src": "6256:162:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 361,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "--",
                          "prefix": false,
                          "src": "6500:35:0",
                          "subExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 357,
                                "name": "tokensToConverters",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 151,
                                "src": "6500:18:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                                  "typeString": "mapping(address => address[] storage ref)"
                                }
                              },
                              "id": 359,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 358,
                                "name": "_token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 299,
                                "src": "6519:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6500:26:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 360,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "6500:33:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 362,
                        "nodeType": "ExpressionStatement",
                        "src": "6500:35:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 366,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "6622:36:0",
                          "subExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 363,
                              "name": "convertersToTokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 155,
                              "src": "6629:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                "typeString": "mapping(address => address)"
                              }
                            },
                            "id": 365,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 364,
                              "name": "converter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 319,
                              "src": "6648:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6629:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 367,
                        "nodeType": "ExpressionStatement",
                        "src": "6622:36:0"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 369,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 299,
                              "src": "6739:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 370,
                              "name": "converter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 319,
                              "src": "6747:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 368,
                            "name": "ConverterRemoval",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 170,
                            "src": "6722:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 371,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6722:35:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 372,
                        "nodeType": "EmitStatement",
                        "src": "6717:40:0"
                      }
                    ]
                  },
                  "documentation": "@dev removes an existing converter from the registry\nnote that the function doesn't scale and might be needed to be called\nmultiple times when removing an older converter from a large converter list\n@param _token   token address\n@param _index   converter index",
                  "id": 374,
                  "implemented": true,
                  "isConstructor": false,
                  "isDeclaredConst": false,
                  "modifiers": [
                    {
                      "arguments": null,
                      "id": 304,
                      "modifierName": {
                        "argumentTypes": null,
                        "id": 303,
                        "name": "ownerOnly",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "6022:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$__$",
                          "typeString": "modifier ()"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "6022:9:0"
                    },
                    {
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 306,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 299,
                          "src": "6053:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 307,
                      "modifierName": {
                        "argumentTypes": null,
                        "id": 305,
                        "name": "validAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 123,
                        "src": "6040:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$_t_address_$",
                          "typeString": "modifier (address)"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "6040:20:0"
                    }
                  ],
                  "name": "unregisterConverter",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 302,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 299,
                        "name": "_token",
                        "nodeType": "VariableDeclaration",
                        "scope": 374,
                        "src": "5968:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 298,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5968:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 301,
                        "name": "_index",
                        "nodeType": "VariableDeclaration",
                        "scope": 374,
                        "src": "5984:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 300,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "5984:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "5967:31:0"
                  },
                  "payable": false,
                  "returnParameters": {
                    "id": 308,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6065:0:0"
                  },
                  "scope": 375,
                  "src": "5939:825:0",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "public"
                }
              ],
              "scope": 376,
              "src": "2574:4192:0"
            }
          ],
          "src": "39:6727:0"
        },
        "id": 0
      }
    }
  }
}
